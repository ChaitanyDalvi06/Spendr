import { type PartitionedParts } from './formatter';
import { ServerSafeHTMLElement } from './ssr';
export { prefersReducedMotion } from './styles';
export { render, type RenderProps } from './ssr';
export * from './formatter';
export declare const canAnimate: boolean;
type RawTrend = boolean | 'increasing' | 'decreasing';
export { type RawTrend as Trend };
declare enum Trend {
    UP = 1,
    DOWN = -1,
    NONE = 0
}
export interface Props {
    transformTiming: EffectTiming;
    spinTiming: EffectTiming | undefined;
    opacityTiming: EffectTiming;
    animated: boolean;
    manual: boolean;
    respectMotionPreference: boolean;
    trend: RawTrend;
    continuous: boolean;
}
export declare class NumberFlowLite extends ServerSafeHTMLElement implements Props {
    #private;
    static defaultProps: Props;
    static define(): void;
    transformTiming: EffectTiming;
    spinTiming: EffectTiming | undefined;
    opacityTiming: EffectTiming;
    manual: boolean;
    respectMotionPreference: boolean;
    trend: RawTrend;
    continuous: boolean;
    get animated(): boolean;
    set animated(val: boolean);
    get computedTrend(): Trend | undefined;
    get startingPlace(): number | null | undefined;
    get computedAnimated(): boolean;
    set parts(parts: PartitionedParts | undefined);
    willUpdate(): void;
    didUpdate(): void;
}
